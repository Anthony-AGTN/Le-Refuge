<section>
    <div>
        <h2>{{ sectionTitle }}</h2>
        <p>{{ sub_title }}</p>
        <div id="instagram-feeds-container" class="mx-1 mx-sm-4 mb-4 row row-cols-1 row-cols-sm-2 g-4 g-xl-5"></div>
        <div class="mx-4 d-flex flex-column flex-sm-row justify-content-sm-evenly">
            <button onclick="getInstagramFeeds()" type="button" id="btn-get-instagram-feeds" class="btn btn-primary mb-4 mb-sm-0">{{ "Afficher plus..." }}</button>
            <button onclick="window.open('{{ account_url }}', '_blank');" type="button" class="btn btn-info">{{ "Suivre sur instagram" }}</button>
        </div>
    </div>
</section>

<script>
    getInstagramFeeds();

    function getInstagramFeeds(apiKey = null) {
        let url = '{{ path('instagram_feeds', {'apiKey': 'API_KEY'}) }}'.replace('API_KEY', apiKey ?? '')
        fetch(url).then(response => response.json()).then(data => {

            const instagramFeeds = data.instagramFeeds.data;

            for (const instagramFeed of instagramFeeds) { 
                
                /* Sélection de l'url de l'image en fonction du type de média */
                let imgUrl = instagramFeed.media_url
                if (instagramFeed.media_type == "VIDEO") {
                    imgUrl = instagramFeed.thumbnail_url
                }

                /* Sélection de la div instagram-feeds-container */
                const instagramFeedsContainer = document.getElementById('instagram-feeds-container');

                /* Création de la div insta-media */
                const newDivInstaMedia = document.createElement('div');
                newDivInstaMedia.classList.add('insta-media');
                instagramFeedsContainer.appendChild(newDivInstaMedia);

                /* Création du lien insta-media-link */
                const newInstaMediaLink = document.createElement('a');
                newInstaMediaLink.classList.add('insta-media-link');
                newInstaMediaLink.setAttribute("href", instagramFeed.permalink);
                newInstaMediaLink.setAttribute("target", "_blank");
                newInstaMediaLink.setAttribute("style", `background-image: url(${imgUrl});`);

                /* Ajout de l'icone play en svg si le feed est une vidéo */
                if (instagramFeed.media_type == "VIDEO") {
                    newInstaMediaLink.innerHTML += '<svg aria-label="Play" aria-hidden="true" role="presentation" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512"><path fill="currentColor" d="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"></path></svg>'
                }

                /* Ajout du lien insta-media-link dans la div insta-media */
                newDivInstaMedia.appendChild(newInstaMediaLink);
            }

            const btnGetInstagramFeeds = document.getElementById("btn-get-instagram-feeds");
            if (data.instagramFeeds.paging.next) {
                const afterApiKey = data.instagramFeeds.paging.cursors.after;
                btnGetInstagramFeeds.setAttribute("onclick", `getInstagramFeeds('${afterApiKey}')`);
            } else {
                btnGetInstagramFeeds.setAttribute("style", "display: none;");
            }

        }).catch(error => {
            console.log(error);
        });
    }
</script>
